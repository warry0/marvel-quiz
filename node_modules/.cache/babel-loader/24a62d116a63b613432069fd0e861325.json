{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dev/Desktop/marvel-quiz/src/components/QuizOver/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { GiTrophyCup } from \"react-icons/gi\";\nimport Loader from \"../Loader\";\nimport Modal from \"../Modal\";\nimport axios from \"axios\";\nconst QuizOver = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    levelNames,\n    score,\n    maxQuestions,\n    quizLevel,\n    percent,\n    loadLevelQuestions\n  } = props;\n  const API_PUBLIC_KEY = process.env.REACT_APP_MARVEL_API_KEY;\n  console.log(object);\n  const hash = \"5925445446127dde7e6e9a76905a19f2\";\n  const [asked, setAsked] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [characterInfos, setCharacterInfos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setAsked(ref.current);\n\n    if (localStorage.getItem(\"marvelStorageDate\")) {\n      const date = localStorage.getItem(\"marvelStorageDate\");\n      checkDataAge(date);\n    }\n  }, [ref]);\n\n  const checkDataAge = date => {\n    const today = Date.now();\n    const timeDifference = today - date;\n    const daysDifference = timeDifference / (1000 * 3600 * 24);\n\n    if (daysDifference >= 15) {\n      localStorage.clear();\n      localStorage.setItem(\"marvelStorageDate\", Date.now());\n    }\n  };\n\n  const showModal = id => {\n    setOpenModal(true);\n\n    if (localStorage.getItem(id)) {\n      setCharacterInfos(JSON.parse(localStorage.getItem(id)));\n      setLoading(false);\n    } else {\n      axios.get(`https://gateway.marvel.com/v1/public/characters/${id}?ts=1&apikey=${API_PUBLIC_KEY}&hash=${hash}`).then(response => {\n        setCharacterInfos(response.data);\n        setLoading(false);\n        localStorage.setItem(id, JSON.stringify(response.data));\n\n        if (!localStorage.getItem(\"marvelStorageDate\")) {\n          localStorage.setItem(\"marvelStorageDate\", Date.now());\n        }\n      }).catch(err => console.log(err));\n    }\n  };\n\n  const hideModal = () => {\n    setOpenModal(false);\n    setLoading(true);\n  };\n\n  const capitalizeFirestletter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const averageGrade = maxQuestions / 2;\n\n  if (score < averageGrade) {\n    setTimeout(() => loadLevelQuestions(quizLevel), 3000);\n  }\n\n  const decision = score >= averageGrade ? /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stepsBtnContainer\",\n      children: quizLevel < levelNames.length ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"successMsg\",\n          children: \"Bravo, passez au niveau suivant!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnResult success\",\n          onClick: () => loadLevelQuestions(quizLevel),\n          children: \"Niveau Suivant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"successMsg\",\n          children: [/*#__PURE__*/_jsxDEV(GiTrophyCup, {\n            size: \"50px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), \" Bravo, vous \\xEAtes un expert !\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnResult gameOver\",\n          onClick: () => loadLevelQuestions(0),\n          children: \"Accueil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"percentage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressPercent\",\n        children: [\"R\\xE9ussite: \", percent, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressPercent\",\n        children: [\"Note: \", score, \"/\", maxQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stepsBtnContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"failureMsg\",\n        children: \"Vous avez \\xE9chou\\xE9 !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"percentage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressPercent\",\n        children: [\"R\\xE9ussite: \", percent, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressPercent\",\n        children: [\"Note: \", score, \"/\", maxQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 7\n  }, this);\n  const questionAnswer = score >= averageGrade ? asked.map(question => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: question.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnInfo\",\n          onClick: () => showModal(question.heroId),\n          children: \"Infos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: /*#__PURE__*/_jsxDEV(\"td\", {\n      colSpan: \"3\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        loadingMsg: \"pas de r√©ponses!\",\n        styling: {\n          textAlign: \"center\",\n          color: \"red\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 7\n  }, this);\n  const resultInModal = !loading ? /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: characterInfos.data.results[0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comicImage\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: characterInfos.data.results[0].thumbnail.path + \".\" + characterInfos.data.results[0].thumbnail.extension,\n          alt: characterInfos.data.results[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: characterInfos.attributionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comicDetails\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), characterInfos.data.results[0].description ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: characterInfos.data.results[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Description indisponible ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Plus d'infos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), characterInfos.data.results[0].urls && characterInfos.data.results[0].urls.map((url, index) => {\n          return /*#__PURE__*/_jsxDEV(\"a\", {\n            href: url.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: capitalizeFirestletter(url.type)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalFooter\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modalBtn\",\n        onClick: hideModal,\n        children: \"Fermer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"R\\xE9ponse de Marvel ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalBody\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [decision, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Les r\\xE9ponses aux questions pos\\xE9es:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"answers\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"R\\xE9ponses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Infos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: questionAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      showModal: openModal,\n      hideModal: hideModal,\n      children: resultInModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}, \"pJ7OKdR8GL0IOzQLPA1o9jS/KRA=\"));\n_c2 = QuizOver;\nexport default _c3 = /*#__PURE__*/React.memo(QuizOver);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QuizOver$React.forwardRef\");\n$RefreshReg$(_c2, \"QuizOver\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/dev/Desktop/marvel-quiz/src/components/QuizOver/index.js"],"names":["React","Fragment","useEffect","useState","GiTrophyCup","Loader","Modal","axios","QuizOver","forwardRef","props","ref","levelNames","score","maxQuestions","quizLevel","percent","loadLevelQuestions","API_PUBLIC_KEY","process","env","REACT_APP_MARVEL_API_KEY","console","log","object","hash","asked","setAsked","openModal","setOpenModal","characterInfos","setCharacterInfos","loading","setLoading","current","localStorage","getItem","date","checkDataAge","today","Date","now","timeDifference","daysDifference","clear","setItem","showModal","id","JSON","parse","get","then","response","data","stringify","catch","err","hideModal","capitalizeFirestletter","string","charAt","toUpperCase","slice","averageGrade","setTimeout","decision","length","questionAnswer","map","question","answer","heroId","textAlign","color","resultInModal","results","name","thumbnail","path","extension","attributionText","description","urls","url","index","type","memo"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { GiTrophyCup } from \"react-icons/gi\";\nimport Loader from \"../Loader\";\nimport Modal from \"../Modal\";\nimport axios from \"axios\";\n\nconst QuizOver = React.forwardRef((props, ref) => {\n  const {\n    levelNames,\n    score,\n    maxQuestions,\n    quizLevel,\n    percent,\n    loadLevelQuestions,\n  } = props;\n\n  const API_PUBLIC_KEY = process.env.REACT_APP_MARVEL_API_KEY;\n  console.log(object)\n  const hash = \"5925445446127dde7e6e9a76905a19f2\";\n\n  const [asked, setAsked] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [characterInfos, setCharacterInfos] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setAsked(ref.current);\n\n    if (localStorage.getItem(\"marvelStorageDate\")) {\n      const date = localStorage.getItem(\"marvelStorageDate\");\n      checkDataAge(date);\n    }\n  }, [ref]);\n\n  const checkDataAge = (date) => {\n    const today = Date.now();\n    const timeDifference = today - date;\n\n    const daysDifference = timeDifference / (1000 * 3600 * 24);\n\n    if (daysDifference >= 15) {\n      localStorage.clear();\n      localStorage.setItem(\"marvelStorageDate\", Date.now());\n    }\n  };\n\n  const showModal = (id) => {\n    setOpenModal(true);\n\n    if (localStorage.getItem(id)) {\n      setCharacterInfos(JSON.parse(localStorage.getItem(id)));\n      setLoading(false);\n    } else {\n      axios\n        .get(\n          `https://gateway.marvel.com/v1/public/characters/${id}?ts=1&apikey=${API_PUBLIC_KEY}&hash=${hash}`\n        )\n        .then((response) => {\n          setCharacterInfos(response.data);\n          setLoading(false);\n\n          localStorage.setItem(id, JSON.stringify(response.data));\n          if (!localStorage.getItem(\"marvelStorageDate\")) {\n            localStorage.setItem(\"marvelStorageDate\", Date.now());\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  const hideModal = () => {\n    setOpenModal(false);\n    setLoading(true);\n  };\n\n  const capitalizeFirestletter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const averageGrade = maxQuestions / 2;\n\n  if (score < averageGrade) {\n    setTimeout(() => loadLevelQuestions(quizLevel), 3000);\n  }\n\n  const decision =\n    score >= averageGrade ? (\n      <Fragment>\n        <div className=\"stepsBtnContainer\">\n          {quizLevel < levelNames.length ? (\n            <Fragment>\n              <p className=\"successMsg\">Bravo, passez au niveau suivant!</p>\n              <button\n                className=\"btnResult success\"\n                onClick={() => loadLevelQuestions(quizLevel)}\n              >\n                Niveau Suivant\n              </button>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <p className=\"successMsg\">\n                <GiTrophyCup size=\"50px\" /> Bravo, vous √™tes un expert !\n              </p>\n              <button\n                className=\"btnResult gameOver\"\n                onClick={() => loadLevelQuestions(0)}\n              >\n                Accueil\n              </button>\n            </Fragment>\n          )}\n        </div>\n        <div className=\"percentage\">\n          <div className=\"progressPercent\">R√©ussite: {percent} %</div>\n          <div className=\"progressPercent\">\n            Note: {score}/{maxQuestions}\n          </div>\n        </div>\n      </Fragment>\n    ) : (\n      <Fragment>\n        <div className=\"stepsBtnContainer\">\n          <p className=\"failureMsg\">Vous avez √©chou√© !</p>\n        </div>\n\n        <div className=\"percentage\">\n          <div className=\"progressPercent\">R√©ussite: {percent} %</div>\n          <div className=\"progressPercent\">\n            Note: {score}/{maxQuestions}\n          </div>\n        </div>\n      </Fragment>\n    );\n\n  const questionAnswer =\n    score >= averageGrade ? (\n      asked.map((question) => {\n        return (\n          <tr key={question.id}>\n            <td>{question.question}</td>\n            <td>{question.answer}</td>\n            <td>\n              <button\n                className=\"btnInfo\"\n                onClick={() => showModal(question.heroId)}\n              >\n                Infos\n              </button>\n            </td>\n          </tr>\n        );\n      })\n    ) : (\n      <tr>\n        <td colSpan=\"3\">\n          <Loader\n            loadingMsg={\"pas de r√©ponses!\"}\n            styling={{ textAlign: \"center\", color: \"red\" }}\n          />\n        </td>\n      </tr>\n    );\n\n  const resultInModal = !loading ? (\n    <Fragment>\n      <div className=\"modalHeader\">\n        <h2>{characterInfos.data.results[0].name}</h2>\n      </div>\n      <div className=\"modalBody\">\n        <div className=\"comicImage\">\n          <img\n            src={\n              characterInfos.data.results[0].thumbnail.path +\n              \".\" +\n              characterInfos.data.results[0].thumbnail.extension\n            }\n            alt={characterInfos.data.results[0].name}\n          />\n\n          <p>{characterInfos.attributionText}</p>\n        </div>\n        <div className=\"comicDetails\">\n          <h3>Description</h3>\n          {characterInfos.data.results[0].description ? (\n            <p>{characterInfos.data.results[0].description}</p>\n          ) : (\n            <p>Description indisponible ...</p>\n          )}\n          <h3>Plus d'infos</h3>\n          {characterInfos.data.results[0].urls &&\n            characterInfos.data.results[0].urls.map((url, index) => {\n              return (\n                <a\n                  key={index}\n                  href={url.url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {capitalizeFirestletter(url.type)}\n                </a>\n              );\n            })}\n        </div>\n      </div>\n      <div className=\"modalFooter\">\n        <button className=\"modalBtn\" onClick={hideModal}>\n          Fermer\n        </button>\n      </div>\n    </Fragment>\n  ) : (\n    <Fragment>\n      <div className=\"modalHeader\">\n        <h2>R√©ponse de Marvel ...</h2>\n      </div>\n      <div className=\"modalBody\">\n        <Loader />\n      </div>\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      {decision}\n\n      <hr />\n      <p>Les r√©ponses aux questions pos√©es:</p>\n\n      <div className=\"answerContainer\">\n        <table className=\"answers\">\n          <thead>\n            <tr>\n              <th>Question</th>\n              <th>R√©ponses</th>\n              <th>Infos</th>\n            </tr>\n          </thead>\n          <tbody>{questionAnswer}</tbody>\n        </table>\n      </div>\n\n      <Modal showModal={openModal} hideModal={hideModal}>\n        {resultInModal}\n      </Modal>\n    </Fragment>\n  );\n});\n\nexport default React.memo(QuizOver);\n"]},"metadata":{},"sourceType":"module"}