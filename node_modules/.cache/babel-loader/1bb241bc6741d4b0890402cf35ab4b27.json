{"ast":null,"code":"import _objectSpread from\"/Users/dev/Desktop/marvel-quiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/dev/Desktop/marvel-quiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _classCallCheck from\"/Users/dev/Desktop/marvel-quiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/dev/Desktop/marvel-quiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/dev/Desktop/marvel-quiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/dev/Desktop/marvel-quiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{Component,Fragment}from\"react\";import{toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.min.css\";import{QuizMarvel}from\"../quizMarvel/\";import Levels from\"../Levels\";import ProgressBar from\"../ProgressBar\";import QuizOver from\"../QuizOver\";import{FaChevronRight}from\"react-icons/fa\";toast.configure();var initialState={quizLevel:0,maxQuestions:10,storedQuestions:[],question:null,options:[],idQuestion:0,btnDisabled:true,userAnswer:null,score:0,showWelcomeMsg:false,quizEnd:false,percent:null};var levelNames=[\"debutant\",\"confirme\",\"expert\"];var Quiz=/*#__PURE__*/function(_Component){_inherits(Quiz,_Component);var _super=_createSuper(Quiz);function Quiz(props){var _this;_classCallCheck(this,Quiz);_this=_super.call(this,props);_this.loadQuestions=function(quizz){var fetchedArrayQuiz=QuizMarvel[0].quizz[quizz];if(fetchedArrayQuiz.length>=_this.state.maxQuestions){_this.storedDataRef.current=fetchedArrayQuiz;var newArray=fetchedArrayQuiz.map(function(_ref){var answer=_ref.answer,keepRest=_objectWithoutProperties(_ref,[\"answer\"]);return keepRest;});_this.setState({storedQuestions:newArray});}};_this.showToastMsg=function(pseudo){if(!_this.state.showWelcomeMsg){_this.setState({showWelcomeMsg:true});toast.warn(\"Bienvenue \".concat(pseudo,\", et bonne chance!\"),{position:\"top-right\",autoClose:2000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:false,bodyClassName:\"toastify-color-welcome\"});}};_this.nextQuestion=function(){if(_this.state.idQuestion===_this.state.maxQuestions-1){_this.setState({quizEnd:true});}else{_this.setState(function(prevState){return{idQuestion:prevState.idQuestion+1};});}var goodAnswer=_this.storedDataRef.current[_this.state.idQuestion].answer;if(_this.state.userAnswer===goodAnswer){_this.setState(function(prevState){return{score:prevState.score+1};});toast.success(\"Bravo +1\",{position:\"top-right\",autoClose:2000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,bodyClassName:\"toastify-color\"});}else{toast.error(\"RatÃ© 0\",{position:\"top-right\",autoClose:2000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,bodyClassName:\"toastify-color\"});}};_this.submitAnswer=function(selectedAnswer){_this.setState({userAnswer:selectedAnswer,btnDisabled:false});};_this.getPercentage=function(maxQuest,ourScore){return ourScore/maxQuest*100;};_this.gameOver=function(percent){if(percent>=50){_this.setState({quizLevel:_this.state.quizLevel+1,percent:percent});}else{_this.setState({percent:percent});}};_this.loadLevelQuestions=function(param){_this.setState(_objectSpread(_objectSpread({},initialState),{},{quizLevel:param}));_this.loadQuestions(levelNames[param]);};_this.state=initialState;_this.storedDataRef=/*#__PURE__*/React.createRef();return _this;}_createClass(Quiz,[{key:\"componentDidMount\",value:function componentDidMount(){this.loadQuestions(levelNames[this.state.quizLevel]);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){var _this$state=this.state,maxQuestions=_this$state.maxQuestions,storedQuestions=_this$state.storedQuestions,idQuestion=_this$state.idQuestion,quizEnd=_this$state.quizEnd,score=_this$state.score;if(storedQuestions!==prevState.storedQuestions&&storedQuestions.length){this.setState({question:storedQuestions[idQuestion].question,options:storedQuestions[idQuestion].options});}if(idQuestion!==prevState.idQuestion&&storedQuestions.length){this.setState({question:storedQuestions[idQuestion].question,options:storedQuestions[idQuestion].options,userAnswer:null,btnDisabled:true});}if(quizEnd!==prevState.quizEnd){var gradepercent=this.getPercentage(maxQuestions,score);this.gameOver(gradepercent);}if(this.props.userData.pseudo!==prevProps.userData.pseudo){this.showToastMsg(this.props.userData.pseudo);}}},{key:\"render\",value:function render(){var _this2=this;var _this$state2=this.state,quizLevel=_this$state2.quizLevel,maxQuestions=_this$state2.maxQuestions,question=_this$state2.question,options=_this$state2.options,idQuestion=_this$state2.idQuestion,btnDisabled=_this$state2.btnDisabled,userAnswer=_this$state2.userAnswer,score=_this$state2.score,quizEnd=_this$state2.quizEnd,percent=_this$state2.percent;var displayOptions=options.map(function(option,index){return/*#__PURE__*/_jsxs(\"p\",{className:\"answerOptions \".concat(userAnswer===option?\"selected\":null),onClick:function onClick(){return _this2.submitAnswer(option);},children:[/*#__PURE__*/_jsx(FaChevronRight,{}),\" \",option]},index);});return quizEnd?/*#__PURE__*/_jsx(QuizOver,{ref:this.storedDataRef,levelNames:levelNames,score:score,maxQuestions:maxQuestions,quizLevel:quizLevel,percent:percent,loadLevelQuestions:this.loadLevelQuestions}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Levels,{levelNames:levelNames,quizLevel:quizLevel}),/*#__PURE__*/_jsx(ProgressBar,{idQuestion:idQuestion,maxQuestions:maxQuestions}),/*#__PURE__*/_jsx(\"h2\",{children:question}),displayOptions,/*#__PURE__*/_jsx(\"button\",{disabled:btnDisabled,className:\"btnSubmit\",onClick:this.nextQuestion,children:idQuestion<maxQuestions-1?\"Suivant\":\"Terminer\"})]});}}]);return Quiz;}(Component);export default Quiz;","map":{"version":3,"sources":["/Users/dev/Desktop/marvel-quiz/src/components/Quiz/index.js"],"names":["React","Component","Fragment","toast","QuizMarvel","Levels","ProgressBar","QuizOver","FaChevronRight","configure","initialState","quizLevel","maxQuestions","storedQuestions","question","options","idQuestion","btnDisabled","userAnswer","score","showWelcomeMsg","quizEnd","percent","levelNames","Quiz","props","loadQuestions","quizz","fetchedArrayQuiz","length","state","storedDataRef","current","newArray","map","answer","keepRest","setState","showToastMsg","pseudo","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","bodyClassName","nextQuestion","prevState","goodAnswer","success","error","submitAnswer","selectedAnswer","getPercentage","maxQuest","ourScore","gameOver","loadLevelQuestions","param","createRef","prevProps","gradepercent","userData","displayOptions","option","index"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport { QuizMarvel } from \"../quizMarvel/\";\nimport Levels from \"../Levels\";\nimport ProgressBar from \"../ProgressBar\";\nimport QuizOver from \"../QuizOver\";\nimport { FaChevronRight } from \"react-icons/fa\";\n\ntoast.configure();\n\nconst initialState = {\n  quizLevel: 0,\n  maxQuestions: 10,\n  storedQuestions: [],\n  question: null,\n  options: [],\n  idQuestion: 0,\n  btnDisabled: true,\n  userAnswer: null,\n  score: 0,\n  showWelcomeMsg: false,\n  quizEnd: false,\n  percent: null,\n};\n\nconst levelNames = [\"debutant\", \"confirme\", \"expert\"];\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.storedDataRef = React.createRef();\n  }\n\n  loadQuestions = (quizz) => {\n    const fetchedArrayQuiz = QuizMarvel[0].quizz[quizz];\n    if (fetchedArrayQuiz.length >= this.state.maxQuestions) {\n      this.storedDataRef.current = fetchedArrayQuiz;\n\n      const newArray = fetchedArrayQuiz.map(\n        ({ answer, ...keepRest }) => keepRest\n      );\n\n      this.setState({ storedQuestions: newArray });\n    }\n  };\n\n  showToastMsg = (pseudo) => {\n    if (!this.state.showWelcomeMsg) {\n      this.setState({ showWelcomeMsg: true });\n\n      toast.warn(`Bienvenue ${pseudo}, et bonne chance!`, {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: false,\n        bodyClassName: \"toastify-color-welcome\",\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.loadQuestions(levelNames[this.state.quizLevel]);\n  }\n\n  nextQuestion = () => {\n    if (this.state.idQuestion === this.state.maxQuestions - 1) {\n      this.setState({ quizEnd: true });\n    } else {\n      this.setState((prevState) => ({ idQuestion: prevState.idQuestion + 1 }));\n    }\n\n    const goodAnswer = this.storedDataRef.current[this.state.idQuestion].answer;\n    if (this.state.userAnswer === goodAnswer) {\n      this.setState((prevState) => ({ score: prevState.score + 1 }));\n\n      toast.success(\"Bravo +1\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        bodyClassName: \"toastify-color\",\n      });\n    } else {\n      toast.error(\"RatÃ© 0\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        bodyClassName: \"toastify-color\",\n      });\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      maxQuestions,\n      storedQuestions,\n      idQuestion,\n      quizEnd,\n      score,\n    } = this.state;\n\n    if (\n      storedQuestions !== prevState.storedQuestions &&\n      storedQuestions.length\n    ) {\n      this.setState({\n        question: storedQuestions[idQuestion].question,\n        options: storedQuestions[idQuestion].options,\n      });\n    }\n\n    if (idQuestion !== prevState.idQuestion && storedQuestions.length) {\n      this.setState({\n        question: storedQuestions[idQuestion].question,\n        options: storedQuestions[idQuestion].options,\n        userAnswer: null,\n        btnDisabled: true,\n      });\n    }\n\n    if (quizEnd !== prevState.quizEnd) {\n      const gradepercent = this.getPercentage(maxQuestions, score);\n      this.gameOver(gradepercent);\n    }\n\n    if (this.props.userData.pseudo !== prevProps.userData.pseudo) {\n      this.showToastMsg(this.props.userData.pseudo);\n    }\n  }\n\n  submitAnswer = (selectedAnswer) => {\n    this.setState({\n      userAnswer: selectedAnswer,\n      btnDisabled: false,\n    });\n  };\n\n  getPercentage = (maxQuest, ourScore) => (ourScore / maxQuest) * 100;\n\n  gameOver = (percent) => {\n    if (percent >= 50) {\n      this.setState({\n        quizLevel: this.state.quizLevel + 1,\n        percent,\n      });\n    } else {\n      this.setState({ percent });\n    }\n  };\n\n  loadLevelQuestions = (param) => {\n    this.setState({ ...initialState, quizLevel: param });\n\n    this.loadQuestions(levelNames[param]);\n  };\n\n  render() {\n    const {\n      quizLevel,\n      maxQuestions,\n      question,\n      options,\n      idQuestion,\n      btnDisabled,\n      userAnswer,\n      score,\n      quizEnd,\n      percent,\n    } = this.state;\n\n    const displayOptions = options.map((option, index) => {\n      return (\n        <p\n          key={index}\n          className={`answerOptions ${\n            userAnswer === option ? \"selected\" : null\n          }`}\n          onClick={() => this.submitAnswer(option)}\n        >\n          <FaChevronRight /> {option}\n        </p>\n      );\n    });\n\n    return quizEnd ? (\n      <QuizOver\n        ref={this.storedDataRef}\n        levelNames={levelNames}\n        score={score}\n        maxQuestions={maxQuestions}\n        quizLevel={quizLevel}\n        percent={percent}\n        loadLevelQuestions={this.loadLevelQuestions}\n      />\n    ) : (\n      <Fragment>\n        <Levels levelNames={levelNames} quizLevel={quizLevel} />\n\n        <ProgressBar idQuestion={idQuestion} maxQuestions={maxQuestions} />\n        <h2>{question}</h2>\n\n        {displayOptions}\n\n        <button\n          disabled={btnDisabled}\n          className=\"btnSubmit\"\n          onClick={this.nextQuestion}\n        >\n          {idQuestion < maxQuestions - 1 ? \"Suivant\" : \"Terminer\"}\n        </button>\n      </Fragment>\n    );\n  }\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}