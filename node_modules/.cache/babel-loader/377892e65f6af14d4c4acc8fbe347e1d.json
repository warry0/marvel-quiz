{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dev/Desktop/marvel-quiz/src/components/QuizOver/index.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nconst QuizOver = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  const {\n    levelNames,\n    score,\n    maxQuestions,\n    quizLevel,\n    percent,\n    loadLevelQuestions\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Les r\\xE9ponses aux questions pos\\xE9es:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"answers\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"R\\xE9ponses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Infos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n});\n_c2 = QuizOver;\nexport default _c3 = /*#__PURE__*/React.memo(QuizOver);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QuizOver$React.forwardRef\");\n$RefreshReg$(_c2, \"QuizOver\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/dev/Desktop/marvel-quiz/src/components/QuizOver/index.js"],"names":["React","Fragment","useEffect","useState","QuizOver","forwardRef","props","ref","levelNames","score","maxQuestions","quizLevel","percent","loadLevelQuestions","memo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AAEA,MAAMC,QAAQ,gBAAGJ,KAAK,CAACK,UAAN,MAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAChD,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA;AANI,MAOFP,KAPJ;AASA,sBACE,QAAC,QAAD;AAAA,4BAGE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAME;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAO,QAAA,SAAS,EAAC,SAAjB;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAnCgB,CAAjB;MAAMF,Q;AAqCN,kCAAeJ,KAAK,CAACc,IAAN,CAAWV,QAAX,CAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\n\nconst QuizOver = React.forwardRef((props, ref) => {\n  const {\n    levelNames,\n    score,\n    maxQuestions,\n    quizLevel,\n    percent,\n    loadLevelQuestions,\n  } = props;\n\n  return (\n    <Fragment>\n      {/* { decision }*/}\n\n      <hr />\n      <p>Les réponses aux questions posées:</p>\n\n      <div className=\"answerContainer\">\n        <table className=\"answers\">\n          <thead>\n            <tr>\n              <th>Question</th>\n              <th>Réponses</th>\n              <th>Infos</th>\n            </tr>\n          </thead>\n          <tbody>{/*{questionAnswer}*/}</tbody>\n        </table>\n      </div>\n\n      {/* <Modal showModal={openModal} hideModal={hideModal}>\n             { resultInModal }\n    </Modal>*/}\n    </Fragment>\n  );\n});\n\nexport default React.memo(QuizOver);\n"]},"metadata":{},"sourceType":"module"}