{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dev/Desktop/marvel-quiz/src/components/QuizOver/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { GiTrophyCup } from 'react-icons/gi';\nimport Loader from '../Loader';\nimport Modal from '../Modal';\nimport axios from 'axios';\nconst QuizOver = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    levelNames,\n    score,\n    maxQuestions,\n    quizLevel,\n    percent,\n    loadLevelQuestions\n  } = props;\n  const API_PUBLIC_KEY = process.env.REACT_APP_MARVEL_API_KEY;\n  const hash = '3bb37c7e1f7fda1ad528bfa0339018d7';\n  const [asked, setAsked] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [characterInfos, setCharacterInfos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setAsked(ref.current);\n\n    if (localStorage.getItem('marvelStorageDate')) {\n      const date = localStorage.getItem('marvelStorageDate');\n      checkDataAge(date);\n    }\n  }, [ref]);\n\n  const checkDataAge = date => {\n    const today = Date.now();\n    const timeDifference = today - date;\n    const daysDifference = timeDifference / (1000 * 3600 * 24);\n\n    if (daysDifference >= 15) {\n      localStorage.clear();\n      localStorage.setItem('marvelStorageDate', Date.now());\n    }\n  };\n\n  const showModal = id => {\n    setOpenModal(true);\n\n    if (localStorage.getItem(id)) {\n      setCharacterInfos(JSON.parse(localStorage.getItem(id)));\n      setLoading(false);\n    } else {\n      axios.get(`https://gateway.marvel.com/v1/public/characters/${id}?ts=1&apikey=${API_PUBLIC_KEY}&hash=${hash}`).then(response => {\n        setCharacterInfos(response.data);\n        setLoading(false);\n        localStorage.setItem(id, JSON.stringify(response.data));\n\n        if (!localStorage.getItem('marvelStorageDate')) {\n          localStorage.setItem('marvelStorageDate', Date.now());\n        }\n      }).catch(err => console.log(err));\n    }\n  };\n\n  const hideModal = () => {\n    setOpenModal(false);\n    setLoading(true);\n  };\n\n  const capitalizeFirestletter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const averageGrade = maxQuestions / 2;\n\n  if (score < averageGrade) {\n    setTimeout(() => loadLevelQuestions(quizLevel), 3000);\n  }\n\n  const decision = score >= averageGrade ? /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stepsBtnContainer\",\n      children: quizLevel < levelNames.length ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"successMsg\",\n          children: \"Bravo, passez au niveau suivant!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnResult success\",\n          onClick: () => loadLevelQuestions(quizLevel),\n          children: \"Niveau Suivant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"successMsg\",\n          children: [/*#__PURE__*/_jsxDEV(GiTrophyCup, {\n            size: \"50px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 24\n          }, this), \" Bravo, vous \\xEAtes un expert !\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnResult gameOver\",\n          onClick: () => loadLevelQuestions(0),\n          children: \"Accueil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"percentage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressPercent\",\n        children: [\"R\\xE9ussite: \", percent, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressPercent\",\n        children: [\"Note: \", score, \"/\", maxQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stepsBtnContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"failureMsg\",\n        children: \"Vous avez \\xE9chou\\xE9 !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"percentage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressPercent\",\n        children: [\"R\\xE9ussite: \", percent, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressPercent\",\n        children: [\"Note: \", score, \"/\", maxQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n  const questionAnswer = score >= averageGrade ? asked.map(question => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: question.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnInfo\",\n          onClick: () => showModal(question.heroId),\n          children: \"Infos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: /*#__PURE__*/_jsxDEV(\"td\", {\n      colSpan: \"3\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        loadingMsg: \"pas de r√©ponses!\",\n        styling: {\n          textAlign: 'center',\n          color: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n  const resultInModal = !loading ? /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: characterInfos.data.results[0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comicImage\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: characterInfos.data.results[0].thumbnail.path + '.' + characterInfos.data.results[0].thumbnail.extension,\n          alt: characterInfos.data.results[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: characterInfos.attributionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comicDetails\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), characterInfos.data.results[0].description ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: characterInfos.data.results[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Description indisponible ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Plus d'infos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), characterInfos.data.results[0].urls && characterInfos.data.results[0].urls.map((url, index) => {\n          return /*#__PURE__*/_jsxDEV(\"a\", {\n            href: url.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: capitalizeFirestletter(url.type)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalFooter\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modalBtn\",\n        onClick: hideModal,\n        children: \"Fermer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"R\\xE9ponse de Marvel ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalBody\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [decision, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Les r\\xE9ponses aux questions pos\\xE9es:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"answers\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"R\\xE9ponses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Infos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: questionAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      showModal: openModal,\n      hideModal: hideModal,\n      children: resultInModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 9\n  }, this);\n}, \"pJ7OKdR8GL0IOzQLPA1o9jS/KRA=\"));\n_c2 = QuizOver;\nexport default _c3 = /*#__PURE__*/React.memo(QuizOver);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QuizOver$React.forwardRef\");\n$RefreshReg$(_c2, \"QuizOver\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/dev/Desktop/marvel-quiz/src/components/QuizOver/index.js"],"names":["React","Fragment","useEffect","useState","GiTrophyCup","Loader","Modal","axios","QuizOver","forwardRef","props","ref","levelNames","score","maxQuestions","quizLevel","percent","loadLevelQuestions","API_PUBLIC_KEY","process","env","REACT_APP_MARVEL_API_KEY","hash","asked","setAsked","openModal","setOpenModal","characterInfos","setCharacterInfos","loading","setLoading","current","localStorage","getItem","date","checkDataAge","today","Date","now","timeDifference","daysDifference","clear","setItem","showModal","id","JSON","parse","get","then","response","data","stringify","catch","err","console","log","hideModal","capitalizeFirestletter","string","charAt","toUpperCase","slice","averageGrade","setTimeout","decision","length","questionAnswer","map","question","answer","heroId","textAlign","color","resultInModal","results","name","thumbnail","path","extension","attributionText","description","urls","url","index","type","memo"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\nimport { GiTrophyCup } from 'react-icons/gi';\nimport Loader from '../Loader'\nimport Modal from '../Modal'\nimport axios from 'axios'\n\nconst QuizOver = React.forwardRef((props, ref) => {\n\n    const {\n        levelNames, \n        score, \n        maxQuestions, \n        quizLevel, \n        percent,\n        loadLevelQuestions\n    } = props;\n\n    const API_PUBLIC_KEY = process.env.REACT_APP_MARVEL_API_KEY;\n    const hash = '3bb37c7e1f7fda1ad528bfa0339018d7';\n\n    const [asked, setAsked] = useState([]);\n    const [openModal, setOpenModal] = useState(false);\n    const [characterInfos, setCharacterInfos] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        setAsked(ref.current)\n\n        if ( localStorage.getItem('marvelStorageDate')) {\n            const date = localStorage.getItem('marvelStorageDate');\n            checkDataAge(date);\n        }\n    }, [ref])\n\n    const checkDataAge = date => {\n\n        const today = Date.now();\n        const timeDifference = today - date;\n\n        const daysDifference = timeDifference / (1000 * 3600 * 24);\n\n        if ( daysDifference >= 15 ) {\n            localStorage.clear();\n            localStorage.setItem('marvelStorageDate', Date.now());\n        }\n    }\n\n    const showModal = id => {\n        setOpenModal(true);\n\n        if ( localStorage.getItem(id) ) {\n\n            setCharacterInfos(JSON.parse(localStorage.getItem(id)));\n            setLoading(false);\n\n        } else {\n\n            axios\n            .get(`https://gateway.marvel.com/v1/public/characters/${id}?ts=1&apikey=${API_PUBLIC_KEY}&hash=${hash}`)\n            .then( response => {\n                \n                setCharacterInfos(response.data);\n                setLoading(false);\n\n                localStorage.setItem(id, JSON.stringify(response.data));\n                if ( !localStorage.getItem('marvelStorageDate') ) {\n                    localStorage.setItem('marvelStorageDate', Date.now());\n                }\n                \n            })\n            .catch( err => console.log(err) )\n        }\n        \n    }\n\n    const hideModal = () => {\n        setOpenModal(false);\n        setLoading(true);\n    }\n\n    const capitalizeFirestletter = string => {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    const averageGrade = maxQuestions / 2;\n\n    if (score < averageGrade) {\n        setTimeout(() => loadLevelQuestions(quizLevel), 3000);\n    }\n\n    const decision = score >= averageGrade ? (\n        <Fragment>\n        <div className=\"stepsBtnContainer\">\n        {\n            quizLevel < levelNames.length ? \n            (\n                <Fragment>\n                    <p className=\"successMsg\">Bravo, passez au niveau suivant!</p>\n                    <button \n                        className=\"btnResult success\"\n                        onClick={() => loadLevelQuestions(quizLevel)}\n                        >\n                        Niveau Suivant\n                    </button>\n                </Fragment>\n            )\n            :\n            (\n                <Fragment>\n                    <p className=\"successMsg\">\n                       <GiTrophyCup size='50px' /> Bravo, vous √™tes un expert !\n                    </p>\n                    <button \n                        className=\"btnResult gameOver\"\n                        onClick={() => loadLevelQuestions(0)}\n                        >\n                        Accueil\n                    </button>\n                </Fragment>\n            )\n        }\n        </div>\n        <div className=\"percentage\">\n            <div className=\"progressPercent\">R√©ussite: {percent} %</div>\n            <div className=\"progressPercent\">Note: {score}/{maxQuestions}</div>\n        </div>\n        </Fragment>\n    )\n    :\n    (\n        <Fragment>\n            <div className=\"stepsBtnContainer\">\n                <p className=\"failureMsg\">Vous avez √©chou√© !</p>\n            </div>\n\n            <div className=\"percentage\">\n                <div className=\"progressPercent\">R√©ussite: {percent} %</div>\n                <div className=\"progressPercent\">Note: {score}/{maxQuestions}</div>\n            </div>\n        </Fragment>\n    )\n\n    const questionAnswer = score >= averageGrade ? (\n        asked.map( question => {\n            return (\n                <tr key={question.id}>\n                    <td>{question.question}</td>\n                    <td>{question.answer}</td>\n                    <td>\n                        <button \n                           className=\"btnInfo\"\n                           onClick={ () => showModal(question.heroId)}\n                        >\n                        Infos\n                        </button>\n                    </td>\n                </tr>\n            )\n        })\n    )\n    :\n    (\n        <tr>\n            <td colSpan=\"3\">\n                <Loader \n                    loadingMsg={\"pas de r√©ponses!\"}\n                    styling={{textAlign: 'center', color: 'red'}}\n                />\n            </td>\n        </tr>\n    )\n\n    const resultInModal = !loading ? \n    (\n        <Fragment>\n            <div className=\"modalHeader\">\n                <h2>{characterInfos.data.results[0].name}</h2>\n            </div>\n            <div className=\"modalBody\">\n               <div className=\"comicImage\">\n                    <img \n                        src={characterInfos.data.results[0].thumbnail.path+'.'+characterInfos.data.results[0].thumbnail.extension} \n                        alt={characterInfos.data.results[0].name}\n                    />\n\n                    <p>{characterInfos.attributionText}</p>\n               </div>\n               <div className=\"comicDetails\">\n                    <h3>Description</h3>\n                    {\n                        characterInfos.data.results[0].description ?\n                        <p>{characterInfos.data.results[0].description}</p>\n                        : <p>Description indisponible ...</p>\n                    }\n                    <h3>Plus d'infos</h3>\n                    {\n                        characterInfos.data.results[0].urls && \n                        characterInfos.data.results[0].urls.map( (url, index) => {\n                            return <a \n                                key={index}\n                                href={url.url}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                              {capitalizeFirestletter(url.type)}\n                            </a>\n                        })\n                    }\n               </div>\n            </div>\n            <div className=\"modalFooter\">\n                <button className=\"modalBtn\" onClick={hideModal}>Fermer</button>\n            </div>\n        </Fragment>\n    )\n    :\n    (\n        <Fragment>\n            <div className=\"modalHeader\">\n                <h2>R√©ponse de Marvel ...</h2>\n            </div>\n            <div className=\"modalBody\">\n                <Loader />\n            </div>\n        </Fragment>\n    )\n\n    return (\n        <Fragment>\n            \n            { decision }\n\n            <hr />\n            <p>Les r√©ponses aux questions pos√©es:</p>\n\n            <div className=\"answerContainer\">\n                <table className=\"answers\">\n                    <thead>\n                        <tr>\n                            <th>Question</th>\n                            <th>R√©ponses</th>\n                            <th>Infos</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {questionAnswer}\n                    </tbody>\n                </table>\n            </div>\n\n            <Modal showModal={openModal} hideModal={hideModal}>\n                { resultInModal }\n            </Modal>\n\n        </Fragment>\n    )\n})\n\nexport default React.memo(QuizOver)\n"]},"metadata":{},"sourceType":"module"}