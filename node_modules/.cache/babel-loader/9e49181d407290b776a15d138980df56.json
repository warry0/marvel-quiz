{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dev/Desktop/marvel-quiz/src/components/QuizOver/index.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nconst QuizOver = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  const {\n    levelNames,\n    score,\n    maxQuestions,\n    quizLevel,\n    percent,\n    loadLevelQuestions\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Les r\\xE9ponses aux questions pos\\xE9es:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"answers\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"R\\xE9ponses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Infos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n});\n_c2 = QuizOver;\nexport default QuizOver;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuizOver$React.forwardRef\");\n$RefreshReg$(_c2, \"QuizOver\");","map":{"version":3,"sources":["/Users/dev/Desktop/marvel-quiz/src/components/QuizOver/index.js"],"names":["React","Fragment","useEffect","useState","QuizOver","forwardRef","props","ref","levelNames","score","maxQuestions","quizLevel","percent","loadLevelQuestions"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AAEA,MAAMC,QAAQ,gBAAGJ,KAAK,CAACK,UAAN,MAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC9C,QAAM;AACFC,IAAAA,UADE;AAEFC,IAAAA,KAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,SAJE;AAKFC,IAAAA,OALE;AAMFC,IAAAA;AANE,MAOFP,KAPJ;AASA,sBACI,QAAC,QAAD;AAAA,4BAIA;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,eAOA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAO,QAAA,SAAS,EAAC,SAAjB;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CAvCgB,CAAjB;MAAMF,Q;AAyCN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\n\nconst QuizOver = React.forwardRef((props, ref) => {\n    const {\n        levelNames, \n        score, \n        maxQuestions, \n        quizLevel, \n        percent,\n        loadLevelQuestions\n    } = props;\n\n    return (\n        <Fragment>\n            \n      {/* { decision }*/}\n\n        <hr />\n        <p>Les réponses aux questions posées:</p>\n\n        <div className=\"answerContainer\">\n            <table className=\"answers\">\n                <thead>\n                    <tr>\n                        <th>Question</th>\n                        <th>Réponses</th>\n                        <th>Infos</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {/*{questionAnswer}*/}\n                </tbody>\n            </table>\n        </div>\n\n        {/* <Modal showModal={openModal} hideModal={hideModal}>\n             { resultInModal }\n    </Modal>*/}\n\n    </Fragment>\n    )\n})\n\nexport default QuizOver\n"]},"metadata":{},"sourceType":"module"}