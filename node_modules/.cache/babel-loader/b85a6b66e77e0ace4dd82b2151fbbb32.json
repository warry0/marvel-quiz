{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dev/Desktop/marvel-quiz/src/components/ProgressBar/index.js\";\nimport React, { Fragment } from \"react\";\n\nconst ProgressBar = ({\n  idQuestion,\n  maxQuestions\n}) => {\n  const getWidth = (totalQuestions, questionId) => {\n    return 100 / totalQuestions * questionId;\n  };\n\n  const actualQuestion = idQuestion + 1;\n  const progressPercent = getWidth(maxQuestions, actualQuestion);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"percentage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressPercent\",\n        children: `Question: ${actualQuestion}/${maxQuestions}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressPercent\",\n        children: `Progression: ${progressPercent}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progressBar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressBarChange\",\n        style: {\n          width: `${progressPercent}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProgressBar;\nexport default RProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"sources":["/Users/dev/Desktop/marvel-quiz/src/components/ProgressBar/index.js"],"names":["React","Fragment","ProgressBar","idQuestion","maxQuestions","getWidth","totalQuestions","questionId","actualQuestion","progressPercent","width","RProgressBar"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAkC;AACpD,QAAMC,QAAQ,GAAG,CAAEC,cAAF,EAAkBC,UAAlB,KAAkC;AACjD,WAAQ,MAAMD,cAAP,GAAyBC,UAAhC;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAGL,UAAU,GAAG,CAApC;AACA,QAAMM,eAAe,GAAGJ,QAAQ,CAACD,YAAD,EAAeI,cAAf,CAAhC;AACA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBAAmC,aAAYA,cAAe,IAAGJ,YAAa;AAA9E;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBAAmC,gBAAeK,eAAgB;AAAlE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAG,GAAED,eAAgB;AAA5B;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAlBD;;KAAMP,W;AAoBN,eAAeS,YAAf","sourcesContent":["import React, { Fragment } from \"react\";\n\nconst ProgressBar = ({ idQuestion, maxQuestions }) => {\n  const getWidth = ( totalQuestions, questionId ) => {\n    return (100 / totalQuestions) * questionId;\n  };\n\n  const actualQuestion = idQuestion + 1;\n  const progressPercent = getWidth(maxQuestions, actualQuestion);\n  return (\n    <Fragment>\n      <div className=\"percentage\">\n        <div className=\"progressPercent\">{`Question: ${actualQuestion}/${maxQuestions}`}</div>\n        <div className=\"progressPercent\">{`Progression: ${progressPercent}%`}</div>\n      </div>\n      <div className=\"progressBar\">\n        <div className=\"progressBarChange\" style={{ width: `${progressPercent}%` }}></div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default RProgressBar;\n"]},"metadata":{},"sourceType":"module"}