{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{Fragment}from\"react\";var ProgressBar=function ProgressBar(_ref){var idQuestion=_ref.idQuestion,maxQuestions=_ref.maxQuestions;var getWidth=function getWidth(totalQuestions,questionId){return 100/totalQuestions*questionId;};var actualQuestion=idQuestion+1;var progressPercent=getWidth(maxQuestions,actualQuestion);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"percentage\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progressPercent\",children:\"Question: \".concat(actualQuestion,\"/\").concat(maxQuestions)}),/*#__PURE__*/_jsx(\"div\",{className:\"progressPercent\",children:\"Progression: \".concat(progressPercent,\"%\")})]}),/*#__PURE__*/_jsx(\"div\",{className:\"progressBar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progressBarChange\",style:{width:\"\".concat(progressPercent,\"%\")}})})]});};export default/*#__PURE__*/React.memo(ProgressBar);","map":{"version":3,"sources":["/Users/dev/Desktop/marvel-quiz/src/components/ProgressBar/index.js"],"names":["React","Fragment","ProgressBar","idQuestion","maxQuestions","getWidth","totalQuestions","questionId","actualQuestion","progressPercent","width","memo"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAkC,IAA/BC,CAAAA,UAA+B,MAA/BA,UAA+B,CAAnBC,YAAmB,MAAnBA,YAAmB,CACpD,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAEC,cAAF,CAAkBC,UAAlB,CAAkC,CACjD,MAAQ,KAAMD,cAAP,CAAyBC,UAAhC,CACD,CAFD,CAIA,GAAMC,CAAAA,cAAc,CAAGL,UAAU,CAAG,CAApC,CACA,GAAMM,CAAAA,eAAe,CAAGJ,QAAQ,CAACD,YAAD,CAAeI,cAAf,CAAhC,CACA,mBACE,MAAC,QAAD,yBACE,aAAK,SAAS,CAAC,YAAf,wBACE,YAAK,SAAS,CAAC,iBAAf,8BAA+CA,cAA/C,aAAiEJ,YAAjE,GADF,cAEE,YAAK,SAAS,CAAC,iBAAf,iCAAkDK,eAAlD,OAFF,GADF,cAKE,YAAK,SAAS,CAAC,aAAf,uBACE,YAAK,SAAS,CAAC,mBAAf,CAAmC,KAAK,CAAE,CAAEC,KAAK,WAAKD,eAAL,KAAP,CAA1C,EADF,EALF,GADF,CAWD,CAlBD,CAoBA,2BAAeT,KAAK,CAACW,IAAN,CAAWT,WAAX,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\n\nconst ProgressBar = ({ idQuestion, maxQuestions }) => {\n  const getWidth = ( totalQuestions, questionId ) => {\n    return (100 / totalQuestions) * questionId;\n  };\n\n  const actualQuestion = idQuestion + 1;\n  const progressPercent = getWidth(maxQuestions, actualQuestion);\n  return (\n    <Fragment>\n      <div className=\"percentage\">\n        <div className=\"progressPercent\">{`Question: ${actualQuestion}/${maxQuestions}`}</div>\n        <div className=\"progressPercent\">{`Progression: ${progressPercent}%`}</div>\n      </div>\n      <div className=\"progressBar\">\n        <div className=\"progressBarChange\" style={{ width: `${progressPercent}%` }}></div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(ProgressBar);\n"]},"metadata":{},"sourceType":"module"}